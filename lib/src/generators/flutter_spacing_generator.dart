import 'flutter_color_generator.dart';

class FlutterSpacingGenerator implements CodeGenerator {
  @override
  String generate(
      Map<String, dynamic> resolvedTokens, Map<String, String> tokenTypes) {
    final buffer = StringBuffer();

    buffer.writeln("/// Auto-generated design tokens for spacing");
    buffer.writeln("/// Do not edit this file manually");
    buffer.writeln("class AppSpacing {");

    final spacingTokens = <String, dynamic>{};

    for (final entry in resolvedTokens.entries) {
      if (entry.key.contains('spacing') ||
          (tokenTypes[entry.key] == 'number' &&
              entry.key.contains('spacing'))) {
        spacingTokens[entry.key] = entry.value;
      }
    }

    if (spacingTokens.isNotEmpty) {
      buffer.writeln();
      buffer.writeln("  // Spacing Values");

      for (final token in spacingTokens.entries) {
        final tokenName = _generateTokenName(token.key);
        final value = token.value;
        buffer
            .writeln("  static const double $tokenName = ${value.toString()};");
      }
    }

    buffer.writeln("}");

    return buffer.toString();
  }

  String _generateTokenName(String path) {
    return path
        .split('.')
        .map((part) => part.replaceAll(RegExp(r'[^a-zA-Z0-9]'), ''))
        .map((part) => part.toLowerCase())
        .join('_')
        .replaceAll('__', '_');
  }
}
